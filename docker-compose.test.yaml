version: "3"
services:
  # Temporary container which sets up replica set
  mongo-setup:
    container_name: mongo-setup
    image: mongo
    restart: on-failure
    networks:
      default:
    volumes:
      - ./scripts:/scripts
    entrypoint: [ "/scripts/mongo_replica_setup.sh" ]
    depends_on:
      - mongo1
      - mongo2
      - mongo3

  # Three mongodb instances
  mongo1:
    hostname: mongo1
    container_name: mongo1
    image: mongo
    expose:
      - 60000
    ports:
      - "60000:60000"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--journal", "--dbpath", "/data/db", "--enableMajorityReadConcern", "false", "--port", "60000" ]
    volumes:
      - ./data/mongo/test/data1/db:/data/db
      - ./data/mongo/test/data1/configdb:/data/configdb
  mongo2:
    hostname: mongo2
    container_name: mongo2
    image: mongo
    expose:
      - 60001
    ports:
      - "60001:60001"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--journal", "--dbpath", "/data/db", "--enableMajorityReadConcern", "false", "--port", "60001" ]
    volumes:
      - ./data/mongo/test/data2/db:/data/db
      - ./data/mongo/test/data2/configdb:/data/configdb
  mongo3:
    hostname: mongo3
    container_name: mongo3
    image: mongo
    expose:
      - 60002
    ports:
      - "60002:60002"
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0", "--journal", "--dbpath", "/data/db", "--enableMajorityReadConcern", "false", "--port", "60002" ]
    volumes:
      - ./data/mongo/test/data3/db:/data/db
      - ./data/mongo/test/data3/configdb:/data/configdb

  # Node.js Express API
  api:
    container_name: api
    depends_on:
      - minio
      - mongo-setup
      - mongo1
      - mongo2
      - mongo3
    ports:
      - "5000:5000"
    build:
      dockerfile: Dockerfile.test
      context: .
    volumes:
      - /app/node_modules
      - .:/app
    environment:
      NODE_ENV: test
      MAIL_SERVICE_API_KEY: ${MAIL_SERVICE_API_KEY}
      MAIL_SERVICE_SENDER: ${MAIL_SERVICE_SENDER}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      MINIO_ACCESS_KEY: "HoXQeYqzORTxLznLEdhI"
      MINIO_SECRET_KEY: "VKcXmMdftliEPqVSsOKk"
      MINIO_URL: "minio"
      MINIO_PORT: 9000
      MINIO_EXTERNAL_URL: "http://localhost:9000"

  # MinIO
  minio:
    container_name: minio
    image: minio/minio
    volumes:
      - ./data/minio/test:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: "HoXQeYqzORTxLznLEdhI"
      MINIO_SECRET_KEY: "VKcXmMdftliEPqVSsOKk"
    command: server /data